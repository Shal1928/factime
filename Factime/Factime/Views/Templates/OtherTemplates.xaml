<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Behaviors="clr-namespace:Factime.Behaviors"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:Converters="clr-namespace:Factime.Converters" 
                    xmlns:Models="clr-namespace:Factime.Models">

    <!--<x:Array x:Key="ConverterParametrForHoliday" Type="{x:Type Models:DayType}">
        <x:Static Member="Models:DayType.Workday" />
        <x:Static Member="Models:DayType.PreHoliday" />
    </x:Array>
    <x:Array x:Key="ConverterParametrForPreHoliday" Type="{x:Type Models:DayType}">
        <x:Static Member="Models:DayType.Workday" />
        <x:Static Member="Models:DayType.Holiday" />
    </x:Array>
    <x:Array x:Key="ConverterParametrForPreWorkday" Type="{x:Type Models:DayType}">
        <x:Static Member="Models:DayType.PreHoliday" />
        <x:Static Member="Models:DayType.Holiday" />
    </x:Array>-->

    <!--TextBox Template-->
    
    <ControlTemplate x:Key="TextBoxHidedTempalte" TargetType="{x:Type TextBox}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation To="Transparent" Storyboard.TargetName="BrBrush0" Storyboard.TargetProperty="Color" Duration="0:0:0.2" />
                            <ColorAnimation To="Transparent" Storyboard.TargetName="BrBrush1" Storyboard.TargetProperty="Color" Duration="0:0:0.2" />
                        </Storyboard>
                    </VisualState>

                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation To="#22000000" Storyboard.TargetName="BrBrush0" Storyboard.TargetProperty="Color" Duration="0:0:0.2" />
                            <ColorAnimation To="#33000000" Storyboard.TargetName="BrBrush1" Storyboard.TargetProperty="Color" Duration="0:0:0.2" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation To="#11000000" Storyboard.TargetName="BrBrush0" Storyboard.TargetProperty="Color" Duration="0:0:0" />
                            <ColorAnimation To="#22000000" Storyboard.TargetName="BrBrush1" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border x:Name="Chrome" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="true">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop x:Name="BrBrush0" Color="Transparent" Offset="0"/>
                        <GradientStop x:Name="BrBrush1" Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBox Text="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource TextBoxUnderlineStyle}"
                             FontFamily="{TemplateBinding FontFamily}" BorderBrush="{TemplateBinding BorderBrush}"
                             FontSize="{TemplateBinding FontSize}" Grid.Column="0" Grid.Row="0" />
                </Grid>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#ADADAD"/>
            </Trigger>
            
            
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="DefaultDataGridDataTemplate">
        <Grid Style="{DynamicResource DefaultGridCellTemplate}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <i:Interaction.Behaviors>
                <Behaviors:GridMouseOverBehavior />
            </i:Interaction.Behaviors>
            
            <Border Background="Transparent" BorderBrush="Transparent" 
                    Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="4" />
            
            <ToggleButton Style="{DynamicResource DateToggleButton}" IsChecked="{Binding IsStateHoliday, Mode=TwoWay}"
                          IsEnabled="{Binding DataContext.SelectStateHoliday, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                          Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" />

            <RadioButton IsChecked="{Binding Type, Mode=TwoWay, ConverterParameter={x:Static Models:DayType.Holiday}, Converter={Converters:DayTypeToBoolConverter}}" 
                         Style="{DynamicResource HolydayRadioButtonPresenter}" />
            <RadioButton IsChecked="{Binding Type, Mode=TwoWay, ConverterParameter={x:Static Models:DayType.PreHoliday}, Converter={Converters:DayTypeToBoolConverter}}" 
                         Style="{DynamicResource PreHolidayRadioButtonPresenter}" />
            <RadioButton IsChecked="{Binding Type, Mode=TwoWay, ConverterParameter={x:Static Models:DayType.Workday}, Converter={Converters:DayTypeToBoolConverter}}" 
                         Style="{DynamicResource WorkdayRadioButtonPresenter}" />

        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="DateToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <TextBlock Style="{DynamicResource TextPresenter}">
                <ContentPresenter />
            </TextBlock>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="MouseOverDateToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Ellipse Style="{DynamicResource EllipseMarkerStyle}" />
            <TextBlock Style="{DynamicResource TextPresenter}">
                <ContentPresenter />
            </TextBlock>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckedDateToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Ellipse Style="{DynamicResource EllipseMarkedStyle}" />

            <TextBlock Style="{DynamicResource TextPresenter}">
                <ContentPresenter />
            </TextBlock>
        </Grid>
    </ControlTemplate>


    <!--***********************************-->
    <!--*                                 *-->
    <!--*   DefaultDataGridColumnHeader   *-->
    <!--*                                 *-->
    <!--****************V******************-->

    <ControlTemplate x:Key="DefaultDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Grid>
            <Border Name="MainBorder" Background="{DynamicResource GridHeaderGradientBrush}">

                <Grid>
                    <ContentPresenter Margin="1,3,1,0" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Content="{TemplateBinding Content}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    
    <ControlTemplate x:Key="LinkRadioButton" TargetType="{x:Type RadioButton}">
        <TextBlock TextDecorations="Underline">
            <ContentPresenter />
        </TextBlock>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckedLinkRadioButton" TargetType="{x:Type RadioButton}">
        <TextBlock FontWeight="SemiBold"  Margin="0,1,0,0">
            <ContentPresenter />
        </TextBlock>
    </ControlTemplate>

</ResourceDictionary>